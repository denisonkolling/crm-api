{
  "openapi": "3.0.0",
  "paths": {
    "/user": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "patch": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/accounts": {
      "post": {
        "operationId": "AccountsController_create",
        "summary": "Create a new account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "get": {
        "operationId": "AccountsController_findAll",
        "summary": "Get all accounts with pagination and sorting options",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to retrieve (default is 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of accounts to retrieve per page (default is 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field by which to sort the accounts (default is \"id\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Order in which to sort the accounts (default is \"asc\")",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{id}": {
      "get": {
        "operationId": "AccountsController_findOne",
        "summary": "Get an account by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "patch": {
        "operationId": "AccountsController_update",
        "summary": "Update an account by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "delete": {
        "operationId": "AccountsController_remove",
        "summary": "Delete an account by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/contacts": {
      "post": {
        "operationId": "ContactsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      },
      "get": {
        "operationId": "ContactsController_findAll",
        "summary": "Get all contacts",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to retrieve (default is 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of contacts to retrieve per page (default is 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Name to filter contacts by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field by which to sort the contacts (default is \"id\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Order in which to sort the contacts (default is \"asc\")",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/contacts/{id}": {
      "get": {
        "operationId": "ContactsController_findOne",
        "summary": "Get a contact by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "description": "Contact ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      },
      "patch": {
        "operationId": "ContactsController_update",
        "summary": "Update a contact by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      },
      "delete": {
        "operationId": "ContactsController_remove",
        "summary": "Delete a contact by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/leads": {
      "post": {
        "operationId": "LeadsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeadDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      },
      "get": {
        "operationId": "LeadsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      }
    },
    "/leads/{id}": {
      "get": {
        "operationId": "LeadsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      },
      "patch": {
        "operationId": "LeadsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      },
      "delete": {
        "operationId": "LeadsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      }
    },
    "/campaigns": {
      "post": {
        "operationId": "CampaignsController_create",
        "summary": "Create a new campaign",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "get": {
        "operationId": "CampaignsController_findAll",
        "summary": "Get all campaigns",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/{id}": {
      "get": {
        "operationId": "CampaignsController_findOne",
        "summary": "Get a campaign by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "patch": {
        "operationId": "CampaignsController_update",
        "summary": "Update a campaign by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCampaignDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "delete": {
        "operationId": "CampaignsController_remove",
        "summary": "Delete a campaign by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/opportunities": {
      "post": {
        "operationId": "OpportunitiesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      },
      "get": {
        "operationId": "OpportunitiesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      }
    },
    "/opportunities/{id}": {
      "get": {
        "operationId": "OpportunitiesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      },
      "patch": {
        "operationId": "OpportunitiesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOpportunityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      },
      "delete": {
        "operationId": "OpportunitiesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      }
    },
    "/tasks": {
      "post": {
        "operationId": "TasksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "get": {
        "operationId": "TasksController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/{id}": {
      "get": {
        "operationId": "TasksController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "patch": {
        "operationId": "TasksController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "delete": {
        "operationId": "TasksController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/events": {
      "post": {
        "operationId": "EventsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      },
      "get": {
        "operationId": "EventsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      }
    },
    "/events/{id}": {
      "get": {
        "operationId": "EventsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      },
      "patch": {
        "operationId": "EventsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      },
      "delete": {
        "operationId": "EventsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      }
    }
  },
  "info": {
    "title": "CRM API",
    "description": "CRM API application",
    "version": "0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "accounts",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "accountId": {
            "type": "number"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "accountId"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      },
      "CreateAccountDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "industry",
          "website",
          "contacts"
        ]
      },
      "UpdateAccountDto": {
        "type": "object",
        "properties": {}
      },
      "Account": {
        "type": "object",
        "properties": {}
      },
      "CreateContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "account"
        ]
      },
      "UpdateContactDto": {
        "type": "object",
        "properties": {}
      },
      "Campaign": {
        "type": "object",
        "properties": {}
      },
      "CreateLeadDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          }
        },
        "required": [
          "name",
          "company",
          "email",
          "status",
          "campaign"
        ]
      },
      "UpdateLeadDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCampaignDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "leads": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "description",
          "status",
          "startDate",
          "endDate",
          "leads"
        ]
      },
      "UpdateCampaignDto": {
        "type": "object",
        "properties": {}
      },
      "CreateOpportunityDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "stage": {
            "type": "string"
          },
          "accountId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string"
          },
          "expectedCloseDate": {
            "format": "date-time",
            "type": "string"
          },
          "actualCloseDate": {
            "format": "date-time",
            "type": "string"
          },
          "probability": {
            "type": "number"
          },
          "opportunityType": {
            "type": "string"
          },
          "leadSource": {
            "type": "string"
          },
          "ownerId": {
            "type": "number"
          },
          "mainCompetitor": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "productCategory": {
            "type": "string"
          },
          "followUpStatus": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "amount",
          "stage",
          "accountId",
          "description",
          "createdDate",
          "expectedCloseDate",
          "actualCloseDate",
          "probability",
          "opportunityType",
          "leadSource",
          "ownerId",
          "mainCompetitor",
          "priority",
          "productCategory",
          "followUpStatus"
        ]
      },
      "UpdateOpportunityDto": {
        "type": "object",
        "properties": {}
      },
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "accountId": {
            "type": "number"
          },
          "leadId": {
            "type": "number"
          },
          "opportunityId": {
            "type": "number"
          }
        },
        "required": [
          "title",
          "description",
          "status",
          "dueDate",
          "accountId",
          "leadId",
          "opportunityId"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {}
      },
      "CreateEventDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          },
          "accountId": {
            "type": "number"
          },
          "leadId": {
            "type": "number"
          }
        },
        "required": [
          "title",
          "description",
          "location",
          "startTime",
          "endTime",
          "accountId",
          "leadId"
        ]
      },
      "UpdateEventDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}