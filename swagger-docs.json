{
  "openapi": "3.0.0",
  "paths": {
    "/user": {
      "post": {
        "operationId": "UserController_create",
        "summary": "Create a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "get": {
        "operationId": "UserController_findAll",
        "summary": "Get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "summary": "Get a user by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "patch": {
        "operationId": "UserController_update",
        "summary": "Update a user by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "summary": "Delete a user by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/accounts": {
      "post": {
        "operationId": "AccountsController_create",
        "summary": "Create a new account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "get": {
        "operationId": "AccountsController_findAll",
        "summary": "Get all accounts with pagination and sorting options",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to retrieve (default is 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of accounts to retrieve per page (default is 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field by which to sort the accounts (default is \"id\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Order in which to sort the accounts (default is \"asc\")",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/find/{id}": {
      "get": {
        "operationId": "AccountsController_findOne",
        "summary": "Get an account by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/update/{id}": {
      "patch": {
        "operationId": "AccountsController_update",
        "summary": "Update an account by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/remove/{id}": {
      "delete": {
        "operationId": "AccountsController_remove",
        "summary": "Delete an account by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/search": {
      "get": {
        "operationId": "AccountsController_search",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "industry",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/contacts": {
      "post": {
        "operationId": "ContactsController_create",
        "summary": "Create a new contact",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      },
      "get": {
        "operationId": "ContactsController_findAll",
        "summary": "Get all contacts",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to retrieve (default is 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of contacts to retrieve per page (default is 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Name to filter contacts by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field by which to sort the contacts (default is \"id\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Order in which to sort the contacts (default is \"asc\")",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/contacts/find/{id}": {
      "get": {
        "operationId": "ContactsController_findOne",
        "summary": "Get a contact by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/contacts/update/{id}": {
      "patch": {
        "operationId": "ContactsController_update",
        "summary": "Update a contact by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/contacts/remove/{id}": {
      "delete": {
        "operationId": "ContactsController_remove",
        "summary": "Delete a contact by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/contacts/search": {
      "get": {
        "operationId": "ContactsController_search",
        "parameters": [
          {
            "name": "firstName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/leads": {
      "post": {
        "operationId": "LeadsController_create",
        "summary": "Create a new lead",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeadDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      },
      "get": {
        "operationId": "LeadsController_findAll",
        "summary": "Get all leads",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      }
    },
    "/leads/{id}": {
      "get": {
        "operationId": "LeadsController_findOne",
        "summary": "Get a lead by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      },
      "patch": {
        "operationId": "LeadsController_update",
        "summary": "Update a lead by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      },
      "delete": {
        "operationId": "LeadsController_remove",
        "summary": "Delete a lead by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "leads"
        ]
      }
    },
    "/campaigns": {
      "post": {
        "operationId": "CampaignsController_create",
        "summary": "Create a new campaign",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      },
      "get": {
        "operationId": "CampaignsController_findAll",
        "summary": "Get all campaigns",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/find/{id}": {
      "get": {
        "operationId": "CampaignsController_findOne",
        "summary": "Get a campaign by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/update/{id}": {
      "patch": {
        "operationId": "CampaignsController_update",
        "summary": "Update a campaign by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCampaignDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/remove/{id}": {
      "delete": {
        "operationId": "CampaignsController_remove",
        "summary": "Delete a campaign by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/search": {
      "get": {
        "operationId": "CampaignsController_search",
        "summary": "Search campaigns with filters",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "hasActiveLeads",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "campaigns"
        ]
      }
    },
    "/opportunities": {
      "post": {
        "operationId": "OpportunitiesController_create",
        "summary": "Create a new opportunity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      },
      "get": {
        "operationId": "OpportunitiesController_findAll",
        "summary": "Get all opportunities",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to retrieve (default is 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of accounts to retrieve per page (default is 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field by which to sort the accounts (default is \"id\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Order in which to sort the accounts (default is \"asc\")",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      }
    },
    "/opportunities/find/{id}": {
      "get": {
        "operationId": "OpportunitiesController_findOne",
        "summary": "Get an opportunity by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      }
    },
    "/opportunities/update/{id}": {
      "patch": {
        "operationId": "OpportunitiesController_update",
        "summary": "Update an opportunity by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOpportunityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      }
    },
    "/opportunities/remove/{id}": {
      "delete": {
        "operationId": "OpportunitiesController_remove",
        "summary": "Delete an opportunity by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      }
    },
    "/opportunities/search": {
      "get": {
        "operationId": "OpportunitiesController_search",
        "summary": "Search opportunities with filters",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "stage",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdDateStart",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdDateEnd",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opportunityType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "probabilityMin",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "probabilityMax",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "opportunities"
        ]
      }
    },
    "/tasks": {
      "post": {
        "operationId": "TasksController_create",
        "summary": "Create a new task",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "get": {
        "operationId": "TasksController_findAll",
        "summary": "Get all tasks",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/find/{id}": {
      "get": {
        "operationId": "TasksController_findOne",
        "summary": "Get a task by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/update/{id}": {
      "patch": {
        "operationId": "TasksController_update",
        "summary": "Update a task by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/remove/{id}": {
      "delete": {
        "operationId": "TasksController_remove",
        "summary": "Delete a task by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/search": {
      "get": {
        "operationId": "TasksController_search",
        "summary": "Search tasks with filters",
        "parameters": [
          {
            "name": "title",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "accountReferenceId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "leadReferenceId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "opportunityReferenceId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/events": {
      "post": {
        "operationId": "EventsController_create",
        "summary": "Create a new event",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      },
      "get": {
        "operationId": "EventsController_findAll",
        "summary": "Get all events",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      }
    },
    "/events/{id}": {
      "get": {
        "operationId": "EventsController_findOne",
        "summary": "Get an event by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      },
      "patch": {
        "operationId": "EventsController_update",
        "summary": "Update an event by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      },
      "delete": {
        "operationId": "EventsController_remove",
        "summary": "Delete an event by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      }
    },
    "/tags": {
      "post": {
        "operationId": "TagsController_createTag",
        "summary": "Create a new tag",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      }
    },
    "/tags/entity": {
      "post": {
        "operationId": "TagsController_addTagToEntity",
        "summary": "Add tag to entity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagEntityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      },
      "delete": {
        "operationId": "TagsController_removeTagFromEntity",
        "summary": "Remove tag from entity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagEntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      }
    },
    "/tags/entity/{entityType}/{entityId}": {
      "get": {
        "operationId": "TagsController_getEntityTags",
        "summary": "Get all tags for an entity",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      }
    },
    "/tags/popular": {
      "get": {
        "operationId": "TagsController_getPopularTags",
        "summary": "Get popular tags",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tags"
        ]
      }
    }
  },
  "info": {
    "title": "CRM API",
    "description": "CRM API application",
    "version": "0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "accounts",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "AccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "industry",
          "website",
          "contacts",
          "isDeleted"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/AccountDto"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password",
          "phone",
          "account"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      },
      "CreateAccountDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "industry",
          "website",
          "contacts"
        ]
      },
      "UpdateAccountDto": {
        "type": "object",
        "properties": {}
      },
      "CreateContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "accountId": {
            "type": "number"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "accountId"
        ]
      },
      "UpdateContactDto": {
        "type": "object",
        "properties": {}
      },
      "CreateLeadDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "leadType": {
            "type": "string"
          },
          "contactId": {
            "type": "number"
          },
          "accountId": {
            "type": "number"
          },
          "campaignId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "status",
          "leadType",
          "contactId",
          "accountId",
          "campaignId"
        ]
      },
      "UpdateLeadDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCampaignDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Planned",
              "Active",
              "Completed",
              "Archived",
              "Draft",
              "Cancelled",
              "Paused",
              "Expired",
              "Failed",
              "Under Review",
              "Suspended",
              "Testing"
            ]
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "leads": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "name",
          "description",
          "status",
          "startDate",
          "endDate",
          "leads"
        ]
      },
      "UpdateCampaignDto": {
        "type": "object",
        "properties": {}
      },
      "CreateOpportunityDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "stage": {
            "type": "string"
          },
          "accountId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string"
          },
          "expectedCloseDate": {
            "format": "date-time",
            "type": "string"
          },
          "actualCloseDate": {
            "format": "date-time",
            "type": "string"
          },
          "probability": {
            "type": "number"
          },
          "opportunityType": {
            "type": "string"
          },
          "leadSource": {
            "type": "string"
          },
          "ownerId": {
            "type": "number"
          },
          "mainCompetitor": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "productCategory": {
            "type": "string"
          },
          "followUpStatus": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "amount",
          "stage",
          "accountId",
          "description",
          "createdDate",
          "expectedCloseDate",
          "actualCloseDate",
          "probability",
          "opportunityType",
          "leadSource",
          "ownerId",
          "mainCompetitor",
          "priority",
          "productCategory",
          "followUpStatus"
        ]
      },
      "UpdateOpportunityDto": {
        "type": "object",
        "properties": {}
      },
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "accountId": {
            "type": "number"
          },
          "leadId": {
            "type": "number"
          },
          "opportunityId": {
            "type": "number"
          }
        },
        "required": [
          "title",
          "description",
          "status",
          "dueDate",
          "accountId",
          "leadId",
          "opportunityId"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {}
      },
      "CreateEventDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          },
          "accountReferenceId": {
            "type": "number"
          },
          "leadReferenceId": {
            "type": "number"
          }
        },
        "required": [
          "title",
          "description",
          "location",
          "startTime",
          "endTime",
          "accountReferenceId",
          "leadReferenceId"
        ]
      },
      "UpdateEventDto": {
        "type": "object",
        "properties": {}
      },
      "CreateTagDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "color"
        ]
      },
      "TagEntityDto": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "number"
          },
          "entityType": {
            "type": "string"
          },
          "entityId": {
            "type": "number"
          }
        },
        "required": [
          "tagId",
          "entityType",
          "entityId"
        ]
      }
    }
  }
}